# general

. allow cli scripts to connect to a different database: done for checkschema.php... is it useful for the others?

. start planning for the "bundle" version: load all field defs from services, use built-in validations etc...

. separate checks on data structure from checks on data

. add a return code to the cli script so that it can be easily used by monitoring systems (nagios etc)


# database checking

. allow FKs of a table with itself (eg. for node and eztags parents)

. verify if there are more FKs than the ones we know about / some of the current ones to tweak

. add a module/view to display violations in GUI (eg. a custom module for ggsysinfo)
  + a cronjob to run the checks in the background, as a live-view would be too slow

. add per-ez-version inis for FKs and load those instead of generic one

. create a php class that loops on FK defs and actually creates them in the db

. allow reading of schema constraints from various file formats (.dba but also schemaspy etc)
  + also write them

. check for clustering violations:
  + in mysql ezdb, master vs. slave table (???)
  + in ezdfs, files in table but not in the filesystem & vice-versa - nb: this is already done by dfscleanup.php,
    but it only checks for file existence, not for discrepancies in size or mtime


# storage checking

. check if binary/media content create using the sf stack is traced in the db tables!

. add possibility to clean/test only images or only binary files


# attribute checking

. add extra checking for ezimage attributes' xml string vs. ezimagefile table rows (see dedicated todo)

. finish check of violations of constraints on all existing datatypes:
  + see the missing ones from ezdbintegrity.ini
  + etc...

. add a module/view to display violations in GUI

. allow user to specify classname/* on the command line to check all objects of a given class


# more checks

. check data in the db which must fit within ezini values, eg. ezflow block types, max content versions, etc

. values we know must be unique but are not
